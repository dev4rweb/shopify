tutorial
https://youtu.be/meioNzgzkOk?list=PLxhkL3Qz1wGf3SlJpjqWbM4XHJE9qLx9E&t=1357

http://localhost:3000/news

1. create react app
    npm/yarn start
2. add routes, sass library
    npm install react-router-dom
    npm install node-sass@4.14.1
    yarn add formik
3. /src/index.js wrap   in
<BrowserRouter>
    <App />
</BrowserRouter>
4. create /src/routes & assets
5. open /src/App.js and clear default code

5.5. create/rename to module App.css & index.css &Variables.module.scss
5.5.2 fill Variables.module.scss
5.5.5 create grid for different screen (media query)
5.6. edit logo.svg
6.
7. create /src/routes/folder for page (General for example) and for other page
7.5 create <Switch> for routes (future pages) in App.js
                <Switch>
                    <Route path="/" exact component={General}/>
                    <Route path="/courses" component={Courses}/>
                    <Route path="/news" component={News}/>
                    <Route path="/shop" component={Shop}/>
                    <Route component={Errors}/>
                </Switch>
8. create Components page ( /src/routes/Main/Main.js & Main.module.scss )
 with style modules
9.
create <Route path='' component={} /> and add exact attr for Mainpage
 and add page 404
 <Route path={`/*`} component={Errors}/> may be during developing create page Coming soon
  link for it.incubator & LazyLoading for other pages with Preloader
10. Create /src/modules/Navigation/Navbar.js & Header.js & Sidebar.js add activeClassName attr to nav
const Navbar = () => {
    return (
        <div className={s.navigation}>
            <div>
                <NavLink to={`/`} exact activeClassName={s.active_link}>Home</NavLink>
            </div>
            <div>
                <NavLink to="/courses" activeClassName={s.active_link}>My courses</NavLink>
            </div>
        </div>
    )
};
11. Add components navigation to pages
12. Create /src/context/Data/ContextData.js & ReducerData.js & StateData.js
13. ContextData.js
import React from 'react';

const ContextData = React.createContext();

export default ContextData
14. StateData.js
const StateData = {
    news: [],
    courses: [],
    likes: 20
};

export default StateData

15. ReducerData.js
const ReducerData = (state, action) => {
    switch (action.type) {
        case "FETCH_NEWS":
            console.log(action);
            return {
                ...state,
                news: action.payload
            };
        default:
            return state
    }
};

export default ReducerData

16. App.js wrap
        const [stateData, dispatchData] = React.useReducer(ReducerData, StateData);
        return(
            <ContextData.Provider value={{stateData, dispatchData}}>
                <Switch>
                ...
                </Switch>
            </ContextData.Provider>
        )

17. General.js (Main page)
const {stateData} = React.useContext(ContextData);
    console.log(stateData);
    return(
    stateData.likes (field)
    )

18. create||connect to server (Laravel, WP)
https://laravel.com/docs/8.x/installation

18.5 create /src/network.js

    const NET = {
        APP_URL: 'http://127.0.0.1:8000/api'
    };

    export default NET;

19. News.js
const {stateData, dispatchData} = React.useContext(ContextData);
    const news = stateData.news;
    React.useEffect(() => {
        const fetchNews = async () => {
            try {
                const response = await fetch(`${NET.APP_URL}/news`);
                if (response.status === 200) {
                    const result = await response.json();
                    dispatchData({
                        type: "FETCH_NEWS",
                        payload: result
                    })
                }
            } catch (e) {
                console.log(e);
            }
        };
        fetchNews();
    }, []);

    return (
        ...
            {news.map((elem, index) => {
                                return (
                                    <NewItem data={elem} key={index}/>
                                )
                            })}
        ...
    )